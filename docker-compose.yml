
services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_webserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Файлы сайта
      - ./website:/var/www/html
      # Конфигурационные файлы Nginx
      - ./configs/nginx/sites:/etc/nginx/conf.d/:ro
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./configs/nginx/taskid.ru.conf:/etc/nginx/conf.d/taskid.ru.conf:ro
      # Логи выводим наружу
      - ./logs/nginx:/var/log/nginx
#    depends_on:
#      - php-fpm
    networks:
      - web_network
    restart: unless-stopped

#  php-fpm:
#    image: php:8.3-fpm
#    container_name: php_fpm_server
#    build:
#      context: ./docker/php-fpm
#      dockerfile: Dockerfile
#    volumes:
#      # Файлы сайта
#      - ./website:/var/www/html
#      # Конфигурационные файлы PHP
#      - ./configs/php/php.ini:/usr/local/etc/php/php.ini:ro
#      - ./configs/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
#      # Логи выводим наружу
#      - ./logs/php-fpm:/var/log/php-fpm
#    environment:
#      - TZ=Europe/Moscow
#    networks:
#      - web_network
#      - db_network
#    restart: unless-stopped


  webadmin-app:
    container_name: webadmin-app
    image: node:18-alpine
    working_dir: /app
#    command: sh -c "npm install && npm start"
    command: sh -c "apk add --no-cache docker-cli && npm install && npm start"
    ports:
      - "8881:8881"
    volumes:
      # Монтируем всю папку webadmin в /app контейнера
      - ./webadmin:/app
      - node_modules:/app/node_modules  # анонимный volume, скрывает node_modules
      - ./data:/data
      - ./configs/nginx/sites:/nginx_config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - web_network





networks:
  web_network:
    driver: bridge
  db_network:
    driver: bridge

volumes:
  node_modules:
#  mysql_data:
#  redis_data:
